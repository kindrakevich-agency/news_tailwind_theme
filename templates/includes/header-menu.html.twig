{#
/**
 * @file
 * Theme implementation for the header menu.
 *
 * Available variables:
 * - search_query: The current search query (if on search page)
 */
#}
<!-- Sticky Header -->
<header class="bg-white border-b border-gray-200 sticky top-0 z-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
            <div class="flex items-center">
                <a href="{{ path('<front>') }}" class="text-2xl font-bold text-gray-900">Polissya.today</a>
            </div>
            <div class="flex items-center gap-2">
                <!-- Desktop Search -->
                <div class="relative hidden md:block">
                    <form action="{{ base_path }}search/node" method="get" accept-charset="UTF-8">
                        <input type="text" name="keys" value="{{ search_query|default('') }}" placeholder="{{ 'Search...'|t }}" class="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 w-64">
                        <svg class="w-5 h-5 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </form>
                </div>

                <!-- Mobile Search Icon -->
                <button id="mobile-search-toggle" class="md:hidden p-2 text-gray-600 hover:text-gray-900 focus:outline-none" aria-label="{{ 'Search'|t }}">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                    </svg>
                </button>

                <!-- Light/Dark Mode Toggle -->
                <button id="theme-toggle" class="p-2 text-gray-600 hover:text-gray-900 focus:outline-none" aria-label="{{ 'Toggle theme'|t }}">
                    <!-- Sun icon (shown in dark mode) -->
                    <svg id="theme-toggle-light-icon" class="w-5 h-5 hidden" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" fill-rule="evenodd" clip-rule="evenodd"></path>
                    </svg>
                    <!-- Moon icon (shown in light mode) -->
                    <svg id="theme-toggle-dark-icon" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
                    </svg>
                </button>

                <!-- Login/Profile Icon -->
                {% if logged_in %}
                    <a href="{{ path('user.page') }}" class="p-2 text-gray-600 hover:text-gray-900 focus:outline-none" aria-label="{{ 'My account'|t }}">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                    </a>
                {% else %}
                    <a href="{{ path('user.login') }}" class="p-2 text-gray-600 hover:text-gray-900 focus:outline-none" aria-label="{{ 'Login'|t }}">
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                    </a>
                {% endif %}
            </div>
        </div>
    </div>

    <!-- Mobile Search Overlay -->
    <div id="mobile-search-overlay" class="hidden md:hidden absolute top-0 left-0 right-0 bg-white border-b border-gray-200 z-50">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex items-center h-16">
                <form action="{{ base_path }}search/node" method="get" accept-charset="UTF-8" class="flex-1 flex items-center">
                    <div class="relative flex-1">
                        <input type="text" name="keys" value="{{ search_query|default('') }}" placeholder="{{ 'Search...'|t }}" class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                        <svg class="w-5 h-5 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                        </svg>
                    </div>
                    <button type="button" id="mobile-search-close" class="ml-3 p-2 text-gray-600 hover:text-gray-900" aria-label="{{ 'Close search'|t }}">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </form>
            </div>
        </div>
    </div>
</header>

<script>
(function() {
    const toggleBtn = document.getElementById('mobile-search-toggle');
    const closeBtn = document.getElementById('mobile-search-close');
    const overlay = document.getElementById('mobile-search-overlay');
    const searchInput = overlay ? overlay.querySelector('input[name="keys"]') : null;

    if (toggleBtn && overlay) {
        toggleBtn.addEventListener('click', function() {
            overlay.classList.remove('hidden');
            if (searchInput) {
                searchInput.focus();
            }
        });
    }

    if (closeBtn && overlay) {
        closeBtn.addEventListener('click', function() {
            overlay.classList.add('hidden');
        });
    }

    // Close on escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && overlay && !overlay.classList.contains('hidden')) {
            overlay.classList.add('hidden');
        }
    });

    // Theme toggle functionality
    const themeToggleBtn = document.getElementById('theme-toggle');
    const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
    const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');

    // Check for saved theme preference or default to 'light' mode
    const currentTheme = localStorage.getItem('theme') || 'light';

    if (currentTheme === 'dark') {
        document.documentElement.classList.add('dark');
        themeToggleLightIcon.classList.remove('hidden');
        themeToggleDarkIcon.classList.add('hidden');
    }

    if (themeToggleBtn) {
        themeToggleBtn.addEventListener('click', function() {
            // Toggle icons
            themeToggleLightIcon.classList.toggle('hidden');
            themeToggleDarkIcon.classList.toggle('hidden');

            // Toggle dark mode
            if (document.documentElement.classList.contains('dark')) {
                document.documentElement.classList.remove('dark');
                localStorage.setItem('theme', 'light');
            } else {
                document.documentElement.classList.add('dark');
                localStorage.setItem('theme', 'dark');
            }
        });
    }
})();
</script>
